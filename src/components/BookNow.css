/* Keyframes */
@keyframes leftSideAni {
  0% {
      transform: translateX(-100px);
      opacity: 0;
  }
  100% {
      transform: translateX(0);
      opacity: 1;
  }
}
@keyframes navani {
  0% {
      transform: translateY(100px);
      opacity: 0;
  }
  100% {
      transform: translateY(0);
      opacity: 1;
  }
}
@keyframes topSideAni {
  0% {
      transform: translateY(-100px);
      opacity: 0;
  }
  100% {
      transform: translateY(0);
      opacity: 1;
  }
}
@keyframes Rotate-reverse {
  from {
    transform: rotate(360deg);
  }
  to {
    transform: rotate(0deg);
  }
}  
@keyframes Rotate {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

/* Classes */
.sttt {
  font-family: 'PoppinsBold', sans-serif;
  text-transform: capitalize;
  font-size: 100px;
  font-weight: extrabold;
  animation: topSideAni 1s ease forwards;
}

.discover {
  animation: leftSideAni 1s ease forwards;
}

.study {
  animation: leftSideAni 1s ease forwards;
}

.card {
  background-color: #fff;
  border-radius: 8px;
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
  width: 330px;
  height: auto;
  gap: 5px;
  padding: 1%;
  text-align: center;
  border: 0.1px solid #e6944c;

  transition: transform 0.3s ease-in-out;
  
}

.card:hover {
  transform: scale(1.08);
  background-color: #f0f0f0; 
}

/* Media Queries */
@media (max-width: 640px) and (orientation: portrait) {
  .card {
    width: 90%; /* Adjust width as needed */
    height: auto;
    margin: 0 auto 20px; /* Center horizontally and add bottom margin */
    flex-direction: column; /* Stack cards vertically on small screens */
    align-items: center; /* Center items horizontally */
  }

  .sttt {
    font-size: 2rem; /* Adjust font size for smaller screens */
  }
}


@media (min-width: 768px) {
  .sttt {
      font-size: 2xl;
  }
}

@media (min-width: 1024px) {
  .sttt {
      font-size: 8xl;
  }
}
.scrolled {
  background-color: rgba(0, 0, 0, 0.9); /* Adjust the opacity as needed */
  backdrop-filter: blur(1000px); /* Adjust the blur intensity as needed */
  position: fixed;
}
@keyframes countUp {
  from {
      opacity: 0;
      transform: translateY(50px);
  }
  to {
      opacity: 1;
      transform: translateY(0);
  }
}

.animate-count-up {
  animation: countUp 1s ease-out;
}
